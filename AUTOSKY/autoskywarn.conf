##
#  THIS IS AUTOSKYWARN Ver 6  by Steve Mahler - KF5VH [Go Boilers!!]
#          Version 170919
#
#  This file and associated files that makeup AUTOSKYWARN 6 are
#  provided and should be use under the following conditions:
#   - This is a fun project not a product
#   - DO NOT use the announcements or lack of announcements
#     for any type of Health / Life Safety decisions.
#   - The information will be wrong if Internet services
#     are interrupted.
#   - Compliments, comments, complaints and bug reports
#     are appreciated, but no general reporting structure
#     has been setup yet. Replies are not guaranteed.
#   - You may redistribute the software if the author credit
#     lines are maintained.
#   - If you change the code please ADD your name and callsign
#     to the list of authors. Add comments identifying your change
#     and what it does and why you needed the change.
#   - No Warrenty for its proper operation or anything else
#   - again, this is a for fun project, not a product
#
##

# This file gets included in other A* files as necessary.

# Set BASEDIR to the location of the AUTOSKYWARN Package
#BASEDIR=/usr/local/AUTOSKY
BASEDIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Source WRKF394s supplemental config file
source $BASEDIR/params.conf

# Set NODE to the AllStar Server Node Number
NODE=$node_number
#source /usr/local/KF5VH/N1NODE
#wwaatmget.php?x=ARC125&y=0
# Set OFILE to the string that points to your parish/county
# USE THE ATOM FEED FROM https://alerts.weather.gov to find
# SEE ReadMe1st file for additional instructions

# Saline Co
OFILE='wwaatmget.php?x='$county_code'&y=0'

# Set WXT to the string that points the directory
#  where your Weather Tail Message will live (pointed to by rpt.conf)
#WXT="/usr/local/TMB"     # for KF5VH nodes
WXT=${BASEDIR}         # for most users

# Set WXA to the string where the SOUNDS live
WXA=${BASEDIR}/SOUNDS

# Set LIMTOT to the numeric value where BOBTAILING Begins
LIMTOT=3

# Set AUDIOTIC to the "numeric" value of the desired sound
AUDIOTIC=95C

# Set FILESAVE to the name of the file that holds PREVIOUS NWS INFO
FILESAVE="alert.save"

# Point to the location of the catwav program (calls sox)
CATWAV=${BASEDIR}/catwav

# Point to the location of the Talkit program (text2speech)
#   not used in main program, just the A*[ON|OFF]
TALKIT=${BASEDIR}/Talkit

# N.B., WHEN SETTING A[123]FILE *DO NOT* INCLUDE THE DOT EXTENSION!!
# POINTERS TO MESSAGE FILE for - - vvvvv
A1FILE=asn96Z       # Announcement - WX Clear - Change! More Info in docs.
A2FILE=asn97         # Announcement - WX New Info
A3FILE=asn98         # Announcement - Error Tone
A4FILE=asn97S         # Announcement - WX Tornado Warning
VWORDSP=asn99.wav    # Announcement - Silent Word Space

# USED FOR COUNTING
WFILE=alert.work
WFILEWC=alert.workwc

# SEQUENCE TEXT PROCESSING
NFILE1='/tmp/alert.txt1'     # from NWS (downloaded every time AutoSky1 runs)
NFILE2='/tmp/alert.txt2'     # from txt1 less unwanted
NFILE2D='/tmp/alert.txt2d'   # from txt1 less unwanted Block
NFILE3='/tmp/alert.txt3'     # from txt2 less header line
NFILE4='/tmp/alert.txt4'     # from txt3 less <title> and </title>
NFILE5='/tmp/alert.txt5'     # from txt4 after trimming number of items per LIMTOT
OLDNFILE='oldalert.txt' # copied from NFILE5 when AutoSky4 last ran
TFILET='/tmp/alert.txtt'     # short term temp file for txt
TFILEW='wx-tmpw.wav'    # temp file
TFILEX='wx-tmpx.wav'    # temp file

# CONTROL FILES FOR MAIN PROGRAM
ENABLEFILE="alert.enbl.master"             # if exists then master enable Auto SkyWarn
ENABLEBOBTAIL="alert.enbl.bobtail"         # if exists then enable BobTail Auto SkyWarn
ENABLEINFORME="alert.enbl.informe"         # if exists then enable Informative EMPTY
ENABLEINFORMF="alert.enbl.informf"         # if exists then enable Informative FULL
ENABLESAYTAIL="alert.enbl.saytail"         # if exists then enable Force Say WX-TAIL
ENABLERPTCTL="alert.enbl.rptctl"           # if exists then enable Repeater Control Scripts

#THIS SECTION NOT IMPLEMENTED (YET?)
# CONTROL FILES FOR BLOCKING
# BLKWARN="alert.block.warn"          # if exists then don't process WARNINGS (can believe you want this)
# BLKWATC="alert.block.watc"          # if exists then don't process WATCHES
# BLKSPCL="alert.block.spcl"          # if exists then don't process SPECIALS (misnomer s/b statements)
# BLKADVS="alert.block.advs"          # if exists then don't process ADVISORIES

# TAIL MESSAGE
TAILMSG='wx-tail.wav'                      # point to this file in rpt.conf
TAILMSGBASE=`basename $TAILMSG .wav`       # strip off the .wav part

# SAY EMPTY MESSAGE IF BY BLOCKING
#   0 = only true NWS empties are voiced
#   1 = true or blocking empties are voiced
SAYEMPTYBYBLK=0

# REPEATER CONTROL FROM AUTOSKYWARN
RPTCTL0=${BASEDIR}/RptCtl0           # shell script for repeater normal  mode
RPTCTL1=${BASEDIR}/RptCtl1           # shell script for repeater skywarn mode
RPTCTLS=${BASEDIR}/RptCtls           # where repeater control status is stored
#                                    # you make up the content supporting your RptCtl scripts

# AUDIO TAGGING - aka COUNTY NAME INCLUSION
# IF THE FILE EXITS SOFTWARE CAUSES THE FILE CONTENTS TO BE ADDED
# TO THE WEATHER TAIL MESSAGE
# THESE FILES SHOULD RESIDE IN .../SOUNDS
# THESE NAMES SHOULD HAVE AN EXTENSION
COUNTYLE="countyle.wav"         # COUNTY LEADS   EMPTY MESSAGE (ALL CLEAR)
COUNTYLT="countylt.wav"         # COUNTY LEADS   TAIL
COUNTYFT="countyft.wav"         # COUNTY FOLLOWS TAIL
COUNTYFE="countyfe.wav"         # COUNTY FOLLOWS EMPTY MESSAGE (ALL CLEAR)

# OTHER SOFTWARE REQUIRES TIMERS
#  Used for KF5VH TMB / MTM - Set To "1"
#  Everybody else Set To "0"
TMBMTM=0
#  Now the delay timer
TMBMTMSECS=10

# Force commands to a known location (no PATH messups)
CAT=/bin/cat
RM=/bin/rm
CP=/bin/cp
GREP=/bin/grep
EGREP=/bin/egrep
SED=/bin/sed
DIFF=/usr/bin/diff
WC=/usr/bin/wc
TOUCH=/usr/bin/touch
SORT=/usr/bin/sort
HEAD=/usr/bin/head
MV=/usr/bin/mv
